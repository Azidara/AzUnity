//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/PlayerController/PlayerInputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputActions"",
    ""maps"": [
        {
            ""name"": ""BasicPlayer"",
            ""id"": ""f5154c14-e8cc-41de-b16d-83f51de32eab"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5555d2d2-6b6c-4927-8e7f-bd7013dc3c51"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""60883b27-26fa-44f4-ae1b-d2bfc99f3f23"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""67d0a5b4-2c27-4c65-b4e3-7048fc964290"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""9dcaa56f-f393-41c7-9a14-206892b3b5d2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Respawn"",
                    ""type"": ""Button"",
                    ""id"": ""53d50004-59ad-49dd-ac4b-3b162b305808"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SetRespawn"",
                    ""type"": ""Button"",
                    ""id"": ""f2b8a49e-0283-4fac-90a6-ec6e6027e213"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""6fa5d31a-e209-49bc-8685-e1b407ffe4e5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""542709f8-1db1-42de-afa1-98fce95961da"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""cea80cae-ec4e-4f8a-95d0-8d243278f0b4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""3e34ab0a-1997-4de9-b04e-d02def040329"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""682fd46a-93a1-4742-86eb-57dbf8e5b8ae"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bd2b166a-86c3-4179-a459-1d45c3886e0f"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""6f9e6d54-49b5-493f-9149-865a18807de1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ed1a852d-3e84-477c-ae96-ee7efa53b21e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""897e3839-df56-4a5d-ad69-96c4b2180d7e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""688a256a-dc36-48d4-8396-63bb9ded0a7b"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""42c6c6d0-c566-4990-bb70-e6b95d454cfd"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""850ec281-ec39-4af1-bbf5-ad58f2f4f530"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""56bd56ef-c105-4509-88d2-e25b9fbbc762"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f99a482f-5338-431b-a325-cad4715d3e83"",
                    ""path"": ""<Gamepad>/leftStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3b4ecedc-8042-41f8-8b7b-e37e38bc31f4"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""310e23ef-3e07-4e30-a6b7-406c853c74e3"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""296924a3-ae6b-4045-a43e-ca38447556d8"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f65cf6d-9c22-46ac-85e7-51402af6df27"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fac28b2-2148-4a92-8da3-4d5dbdccd964"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44ebab6f-5afc-498e-bb25-bab8c3b37c02"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""88072a79-5830-4499-b0bc-2df8baf633de"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Respawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14501f2c-bc85-4892-8aec-d016742d7dd7"",
                    ""path"": ""<Gamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Respawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""233c5440-ac5e-4259-9155-ccf061aa8733"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""SetRespawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": []
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": []
        }
    ]
}");
        // BasicPlayer
        m_BasicPlayer = asset.FindActionMap("BasicPlayer", throwIfNotFound: true);
        m_BasicPlayer_Move = m_BasicPlayer.FindAction("Move", throwIfNotFound: true);
        m_BasicPlayer_Jump = m_BasicPlayer.FindAction("Jump", throwIfNotFound: true);
        m_BasicPlayer_Sprint = m_BasicPlayer.FindAction("Sprint", throwIfNotFound: true);
        m_BasicPlayer_Crouch = m_BasicPlayer.FindAction("Crouch", throwIfNotFound: true);
        m_BasicPlayer_Respawn = m_BasicPlayer.FindAction("Respawn", throwIfNotFound: true);
        m_BasicPlayer_SetRespawn = m_BasicPlayer.FindAction("SetRespawn", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // BasicPlayer
    private readonly InputActionMap m_BasicPlayer;
    private IBasicPlayerActions m_BasicPlayerActionsCallbackInterface;
    private readonly InputAction m_BasicPlayer_Move;
    private readonly InputAction m_BasicPlayer_Jump;
    private readonly InputAction m_BasicPlayer_Sprint;
    private readonly InputAction m_BasicPlayer_Crouch;
    private readonly InputAction m_BasicPlayer_Respawn;
    private readonly InputAction m_BasicPlayer_SetRespawn;
    public struct BasicPlayerActions
    {
        private @PlayerInputActions m_Wrapper;
        public BasicPlayerActions(@PlayerInputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_BasicPlayer_Move;
        public InputAction @Jump => m_Wrapper.m_BasicPlayer_Jump;
        public InputAction @Sprint => m_Wrapper.m_BasicPlayer_Sprint;
        public InputAction @Crouch => m_Wrapper.m_BasicPlayer_Crouch;
        public InputAction @Respawn => m_Wrapper.m_BasicPlayer_Respawn;
        public InputAction @SetRespawn => m_Wrapper.m_BasicPlayer_SetRespawn;
        public InputActionMap Get() { return m_Wrapper.m_BasicPlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BasicPlayerActions set) { return set.Get(); }
        public void SetCallbacks(IBasicPlayerActions instance)
        {
            if (m_Wrapper.m_BasicPlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnMove;
                @Jump.started -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnJump;
                @Sprint.started -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnSprint;
                @Crouch.started -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnCrouch;
                @Respawn.started -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnRespawn;
                @Respawn.performed -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnRespawn;
                @Respawn.canceled -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnRespawn;
                @SetRespawn.started -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnSetRespawn;
                @SetRespawn.performed -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnSetRespawn;
                @SetRespawn.canceled -= m_Wrapper.m_BasicPlayerActionsCallbackInterface.OnSetRespawn;
            }
            m_Wrapper.m_BasicPlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Respawn.started += instance.OnRespawn;
                @Respawn.performed += instance.OnRespawn;
                @Respawn.canceled += instance.OnRespawn;
                @SetRespawn.started += instance.OnSetRespawn;
                @SetRespawn.performed += instance.OnSetRespawn;
                @SetRespawn.canceled += instance.OnSetRespawn;
            }
        }
    }
    public BasicPlayerActions @BasicPlayer => new BasicPlayerActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IBasicPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnRespawn(InputAction.CallbackContext context);
        void OnSetRespawn(InputAction.CallbackContext context);
    }
}
